package NewLanguage.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.typesystem.inference.EquationInfo;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

public class typeof_MapLiteral_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_MapLiteral_InferenceRule() {
  }
  public void applyRule(final SNode mapLiteral, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    SNode mt = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294bee50a20L, "NewLanguage.structure.MapType"));
    final SNode ktype_typevar_7613513929811994458 = typeCheckingContext.createNewRuntimeTypesVariable();
    final SNode vtype_typevar_7613513929811994570 = typeCheckingContext.createNewRuntimeTypesVariable();
    SLinkOperations.setTarget(mt, LINKS.keyType$LTjl, typeCheckingContext.getRepresentative(ktype_typevar_7613513929811994458));
    SLinkOperations.setTarget(mt, LINKS.valueType$LTLn, typeCheckingContext.getRepresentative(vtype_typevar_7613513929811994570));

    if ((SLinkOperations.getTarget(mapLiteral, LINKS.kType$hnxd) != null)) {
      {
        SNode _nodeToCheck_1029348928467 = mapLiteral;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:03b63f59-a307-4616-ac93-9aa75e1634ad(NewLanguage.typesystem)", "7613513929824087831", 0, null);
        typeCheckingContext.createEquation((SNode) SLinkOperations.getTarget(mt, LINKS.keyType$LTjl), (SNode) SLinkOperations.getTarget(mapLiteral, LINKS.kType$hnxd), _info_12389875345);
      }
    }

    if ((SLinkOperations.getTarget(mapLiteral, LINKS.vType$hoeg) != null)) {
      {
        SNode _nodeToCheck_1029348928467 = mapLiteral;
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:03b63f59-a307-4616-ac93-9aa75e1634ad(NewLanguage.typesystem)", "7613513929824096924", 0, null);
        typeCheckingContext.createEquation((SNode) SLinkOperations.getTarget(mt, LINKS.valueType$LTLn), (SNode) SLinkOperations.getTarget(mapLiteral, LINKS.vType$hoeg), _info_12389875345);
      }
    }

    for (SNode pair : ListSequence.fromList(SLinkOperations.getChildren(mapLiteral, LINKS.pairs$f4NJ))) {
      {
        SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(pair, LINKS.key$6wxP);
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:03b63f59-a307-4616-ac93-9aa75e1634ad(NewLanguage.typesystem)", "7613513929812018680", 0, null);
        typeCheckingContext.createGreaterThanInequality((SNode) SLinkOperations.getTarget(mt, LINKS.keyType$LTjl), (SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:03b63f59-a307-4616-ac93-9aa75e1634ad(NewLanguage.typesystem)", "7613513929812018715", true), false, true, _info_12389875345);
      }
      {
        SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(pair, LINKS.value$6wZR);
        EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:03b63f59-a307-4616-ac93-9aa75e1634ad(NewLanguage.typesystem)", "7613513929812024553", 0, null);
        typeCheckingContext.createGreaterThanInequality((SNode) SLinkOperations.getTarget(mt, LINKS.valueType$LTLn), (SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:03b63f59-a307-4616-ac93-9aa75e1634ad(NewLanguage.typesystem)", "7613513929812024598", true), false, true, _info_12389875345);
      }
    }

    {
      SNode _nodeToCheck_1029348928467 = mapLiteral;
      EquationInfo _info_12389875345 = new EquationInfo(_nodeToCheck_1029348928467, null, "r:03b63f59-a307-4616-ac93-9aa75e1634ad(NewLanguage.typesystem)", "7613513929812027764", 0, null);
      typeCheckingContext.createEquation((SNode) typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:03b63f59-a307-4616-ac93-9aa75e1634ad(NewLanguage.typesystem)", "7613513929812027083", true), (SNode) mt, _info_12389875345);
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return CONCEPTS.MapLiteral$h9;
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink keyType$LTjl = MetaAdapterFactory.getContainmentLink(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294bee50a20L, 0x69a8a294bee50a21L, "keyType");
    /*package*/ static final SContainmentLink valueType$LTLn = MetaAdapterFactory.getContainmentLink(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294bee50a20L, 0x69a8a294bee50a23L, "valueType");
    /*package*/ static final SContainmentLink kType$hnxd = MetaAdapterFactory.getContainmentLink(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294bee50a63L, 0x69a8a294bf8f195aL, "kType");
    /*package*/ static final SContainmentLink vType$hoeg = MetaAdapterFactory.getContainmentLink(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294bee50a63L, 0x69a8a294bf8f195dL, "vType");
    /*package*/ static final SContainmentLink key$6wxP = MetaAdapterFactory.getContainmentLink(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294beee9c2cL, 0x69a8a294beee9c2dL, "key");
    /*package*/ static final SContainmentLink value$6wZR = MetaAdapterFactory.getContainmentLink(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294beee9c2cL, 0x69a8a294beee9c2fL, "value");
    /*package*/ static final SContainmentLink pairs$f4NJ = MetaAdapterFactory.getContainmentLink(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294bee50a63L, 0x69a8a294beee9e82L, "pairs");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept MapLiteral$h9 = MetaAdapterFactory.getConcept(0x80fd2975f5c34fe6L, 0xa787f3eac6fef3beL, 0x69a8a294bee50a63L, "NewLanguage.structure.MapLiteral");
  }
}
